name: APITestingWorkflow

env:
  MYSQL_ROOT_PASSWORD: password
  MYSQL_DATABASE: test_database
  MYSQL_USER: test_user
  MYSQL_PASSWORD: test_password
  MYSQL_HOST: localhost


on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  create_env_file:
      runs-on: ubuntu-latest
      
      steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Create .env file
        run: |
          echo "MYSQL_HOST=localhost" > nus-iss-project-development\backend
          echo "MYSQL_USER=root" >> nus-iss-project-development\backend
          echo "MYSQL_PASSWORD=13119795bM194$!" >> nus-iss-project-development\backend
          echo "MYSQL_PORT=3306" >> nus-iss-project-development\backend
          echo "MYSQL_DATABASE=sg_learner_db" >> nus-iss-project-development\backend
  sqlDatabaseSetup:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_PASSWORD}}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE}}
          MYSQL_USER: ${{ env.MYSQL_USER}}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD}}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: ./backend
      run: npm install

    - name: Install MySQL client
      run: sudo apt-get install -y mysql-client

    - name: Create user table
      run: |
        mysql -h 127.0.0.1 -P 3306 -u test_user -p'test_password' test_database -e 'CREATE TABLE tbl_User (userID INT NOT NULL AUTO_INCREMENT PRIMARY KEY, age INT NOT NULL, dateJoined DATETIME DEFAULT NULL, firstName VARCHAR(25) NOT NULL, lastName VARCHAR(25) NOT NULL,
        email VARCHAR(25) NOT NULL, education VARCHAR(100) NOT NULL,username VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, birthDate DATETIME DEFAULT NULL, gender VARCHAR(1) NOT NULL);'

    - name: Create session table
      run: |
        mysql -h 127.0.0.1 -P 3306 -u test_user -p'test_password' test_database -e 'CREATE TABLE `sessions` (`sessionId` INT NOT NULL AUTO_INCREMENT, `tutorId` INT NOT NULL, `studentId` INT NOT NULL, `timing` DATETIME NOT NULL, `status` VARCHAR(10) NOT NULL, `location` VARCHAR(25) NOT NULL, PRIMARY KEY (`sessionId`), FOREIGN KEY (`tutorId`) REFERENCES tbl_User(`userID`), FOREIGN KEY (`studentId`) REFERENCES tbl_User(`userID`));'

    
    - name: Run User Tests
      env:
        DB_HOST: ${{ env.MYSQL_HOST}}
        DB_USER: ${{ env.MYSQL_USER}}
        DB_PASSWORD: ${{ env.MYSQL_PASSWORD}}
        DB_DATABASE: ${{ env.MYSQL_DATABASE}}
      run: npm run test:user
      working-directory: backend

    - name: Run Session Tests
      env:
        DB_HOST: ${{ env.MYSQL_HOST}}
        DB_USER: ${{ env.MYSQL_USER}}
        DB_PASSWORD: ${{ env.MYSQL_PASSWORD}}
        DB_DATABASE: ${{ env.MYSQL_DATABASE}}
      run: npm run test:session
      working-directory: backend
    


