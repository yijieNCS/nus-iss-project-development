name: Continous Integration Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: sg-0f915b94f7a4223b0

    steps:

    - name: Install AWS Client
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install || true
        aws --version

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    
    - name: Get runner IP address
      id: ip
      uses: haythem/public-ip@v1.2
    
    - name: Whitelist runner IP address
      run: |
        aws ec2 authorize-security-group-ingress \
         --group-id$AWS_INSTANCE_SG_ID\
         --protocol tcp\
         --port 22\
         --cidr ${{steps.ip.outputs.ipv4}}/32

    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with: 
        node-version: '20.11.0'
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm install

    - name: Create .env file
      run: |
        echo "MYSQL_HOST=sg-learner-db.c32qkcwscdls.ap-southeast-1.rds.amazonaws.com" > backend/.env
        echo "MYSQL_USER=admin" >> backend/.env
        echo "MYSQL_PASSWORD=password123" >> backend/.env
        echo "MYSQL_PORT=3306" >> backend/.env
        echo "MYSQL_DATABASE=sg_learner_db" >> backend/.env
        echo "JWT_SECRET"="" >> backend/.env

    - name: Revoke runner ip address
      run: |
       aws ec2 revoke-security-group-ingress\
       --group-id $AWS_INSTANCE_SG_ID \
       --protocol tcp \
       --port 22 \
       --cidr ${{ steps.ip.outputs.ipv4 }}/32
    