name: Continous Integration Pipeline

on: [push]

permissions:
  id-token: write 

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: sg-0f915b94f7a4223b0

    steps:

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::356254778464:role/github.to.aws.oicd
        aws-region: ap-southeast-1
    
    # - name: Get runner IP address
    #   id: ip
    #   uses: haythem/public-ip@v1.2
    
    # - name: Whitelist runner IP address
    #   run: |
    #     aws ec2 authorize-security-group-ingress \
    #      --group-id $AWS_INSTANCE_SG_ID\
    #      --protocol tcp\
    #      --port 3306\
    #      --cidr ${{steps.ip.outputs.ipv4}}/32

    # - uses: actions/checkout@v2

    # - name: Set up Node.js
    #   uses: actions/setup-node@v2
    #   with: 
    #     node-version: '20.11.0'
    
    # - name: Install dependencies
    #   working-directory: ./backend
    #   run: npm install

    # - name: Create .env file
    #   run: |
    #     echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" > backend/.env
    #     echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> backend/.env
    #     echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> backend/.env
    #     echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> backend/.env
    #     echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> backend/.env
    #     echo "JWT_SECRET"="" >> backend/.env

    # - name: Run tests
    #   working-directory: ./backend
    #   run: npm run test-all

    # - name: Revoke runner ip address
    #   run: |
    #    aws ec2 revoke-security-group-ingress \
    #    --group-id $AWS_INSTANCE_SG_ID \
    #    --protocol tcp \
    #    --port 3306 \
    #    --cidr ${{ steps.ip.outputs.ipv4 }}/32
    